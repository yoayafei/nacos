server:
  port: 9090
spring:
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true #启用服务发现机制
      routes:
        - id: user_route #路由的唯一标识
          order: 1 #数字越小，优先级越高
          uri: lb://user-service #路由匹配地址，从注册中心根据服务名称进行负载均衡路由
          # 断言（可以多个）
          predicates:
            - Path=/user/** #路由匹配的路径
#            - Query=userId, 123
#            - Header=token, \d+
#            - Before=2025-03-21T23:59:59+08:00
#            - After=2025-03-21T23:59:59+08:00
#            - Between=2025-03-21T08:00:00+08:00,2025-03-21T23:59:59+08:00
#            - JDK=21
          #过滤器（可多个）
          filters:
            - StripPrefix=1
            - InvalidParameter=token,-1
        - id: content_route #路由的唯一标识
          order: 1 #数字越小，优先级越高
          uri: lb://content-service #路由匹配地址，从注册中心根据服务名称进行负载均衡路由
          predicates:
            - Path=/content/** #路由匹配的路径
            - Method=GET
          #过滤器（可多个）
          filters:
            - StripPrefix=1
        - id: ai_route #路由的唯一标识
          order: 1 #数字越小，优先级越高
          uri: lb://ai-service #路由匹配地址，从注册中心根据服务名称进行负载均衡路由
          predicates:
            - Path=/ai/** #路由匹配的路径
            - After=2025-03-12T23:59:59+08:00
          #过滤器（可多个）
          filters:
            - StripPrefix=1
    sentinel:
      filter:
        enabled: false
      transport:
        port: 8719
        dashboard: localhost:8888
      scg:
        fallback:
          mode: response
          response-status: 500
          response-body: '{"code:500,"msg":"网关流量超量!"}'